---
name: CI

on:  # yamllint disable-line rule:truthy
  push:
  pull_request:

jobs:
  preflight:
    runs-on: ubuntu-latest
    outputs:
      python_version: ${{ steps.get_python_version.outputs.python_version }}
      terraform_version: ${{ steps.get_terraform_version.outputs.terraform_version }}  # yamllint disable-line rule:line-length
    steps:
      - uses: actions/checkout@v3
      - id: get_python_version
        run: echo "python_version=$(cat ${GITHUB_WORKSPACE}/.python-version)" >> "$GITHUB_OUTPUT"  # yamllint disable-line rule:line-length
      - id: get_terraform_version
        run: echo "terraform_version=$(cat ${GITHUB_WORKSPACE}/.tfswitchrc)" >> "$GITHUB_OUTPUT"  # yamllint disable-line rule:line-length
  build:
    needs: preflight
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.preflight.outputs.python_version }}
      - name: Setup pipenv
        run: python -m pip install --upgrade pipenv wheel
      - name: Setup pipenv cache
        id: cache-pipenv
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}-dev
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ needs.preflight.outputs.terraform_version }}
      - name: Install
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: make install
        env:
          INCLUDE_DEV: true
      - name: Build
        run: make build
      - name: Test
        run: make test
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: echo hello!
